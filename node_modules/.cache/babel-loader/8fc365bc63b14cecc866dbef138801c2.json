{"ast":null,"code":"var _jsxFileName = \"/Users/iulianb/Desktop/Learn React/season-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => this.setState({\n      lat: position.coords.latitude\n    }), err => this.setState({\n      errorMessage: err.message\n    }));\n    console.log('=== Component Mount ===');\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log('=== Component Update ===');\n  } // React says we have to define render!!\n\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 14\n        }\n      }, \"Error: \", this.state.errorMessage);\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return /*#__PURE__*/React.createElement(SeasonDisplay, {\n        lat: this.state.lat,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }, \"Loading!\");\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 17\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/iulianb/Desktop/Learn React/season-app/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","App","Component","state","lat","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","console","log","componentDidUpdate","prevProps","prevState","snapshot","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,kCAAP;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,GAAG,EAAE,IADC;AAENC,MAAAA,YAAY,EAAE;AAFR,KADwB;AAAA;;AAMhCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACEC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AAAvB,KAAd,CADd,EAEEC,GAAG,IAAI,KAAKH,QAAL,CAAc;AAAEP,MAAAA,YAAY,EAAEU,GAAG,CAACC;AAApB,KAAd,CAFT;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AACjDL,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,GAlB+B,CAoBhC;;;AACAK,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKpB,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKD,KAAL,CAAWE,YAAxB,CAAP;AACD;;AAED,QAAI,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA3C,EAAgD;AAC9C,0BAAO,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AA/B+B;;AAkClCL,QAAQ,CAACwB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nclass App extends React.Component {\n  state = {\n    lat: null,\n    errorMessage: '',\n  };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => this.setState({ lat: position.coords.latitude }),\n      err => this.setState({ errorMessage: err.message }),\n\n    );\n\n    console.log('=== Component Mount ===');\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log('=== Component Update ===');\n  }\n\n  // React says we have to define render!!\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return <div>Error: {this.state.errorMessage}</div>;\n    }\n\n    if (!this.state.errorMessage && this.state.lat) {\n      return <SeasonDisplay lat={this.state.lat} />\n    }\n\n    return <div>Loading!</div>;\n  }\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"]},"metadata":{},"sourceType":"module"}