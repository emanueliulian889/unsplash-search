{"version":3,"sources":["components/imageList/imageList.module.css","components/artistAvatar/artistAvatar.module.css","components/Spinner/spinner.module.css","assets/hero.jpg","api/unsplash.js","hoc/Aux.js","components/imageCard/imageCard.js","components/artistAvatar/artistAvatar.js","components/imageList/imageList.js","components/popularItems/popularItems.js","components/SearchBar/SearchBar.js","components/Spinner/spinner.js","components/MessageBlock/MessageBlock.js","components/heroBox/heroBox.js","App.js","serviceWorker.js","index.js","components/SearchBar/searchBar.module.css"],"names":["module","exports","axios","create","baseURL","headers","Authorization","aux","props","children","ImageCard","onClickImage","id","console","log","state","spans","imageRef","React","createRef","this","image","description","urls","style","gridRowEnd","src","regular","alt","Component","artistAvatar","href","link","target","className","classes","profileFooter","avatar","name","imageList","images","map","position","top","left","right","bottom","height","width","objectFit","boxShadow","key","user","profile_image","large","portfolio_url","imgList","PopularItems","popularImages","unsplash","get","params","order_by","per_page","then","response","setState","data","Aux","textAlign","maxWidth","margin","SearchBar","term","toggleClearBtn","onFormSubmit","e","preventDefault","onSubmitForm","onSubmit","marginBottom","display","value","onChange","type","placeholder","required","length","show","hide","onClick","clearSearch","spinner","loader","messageBlock","padding","backgroundImage","hero","backgroundSize","backgroundRepeat","backgroundPosition","heroBox","App","loading","noImg","totalPhotos","currentPage","perPage","authAvatar","authName","onSearchSubmit","query","page","results","parseInt","total","onClearSearch","MessageBlock","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5aa77388.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgList\":\"imageList_imgList__3R4P6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileFooter\":\"artistAvatar_profileFooter__22snd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"spinner_loader__1adnH\",\"load7\":\"spinner_load7__4jxMk\"};","module.exports = __webpack_public_path__ + \"static/media/hero.b352b095.jpg\";","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID fjLMnhXUNQswFbhsVQpCN9dpG2v6s4nqJADG8GlyJMA'\n        //Authorization: 'Client-ID nytfBQVxKjSEY70J3DPC3AzMvrkmMTPAG7ERv12rE2s'\n    }\n});","const aux = (props) =>  props.children;\n\nexport default aux;","import React from \"react\";\nimport { ImageGroup, Image } from \"react-fullscreen-image\";\n\nclass ImageCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {spans: 0}\n        this.imageRef = React.createRef();\n    }\n\n    // componentDidMount() {\n    //     this.imageRef.current.addEventListener('load', this.setSpans);\n    // }\n\n    // setSpans = () => {\n    //     const height = this.imageRef.current.clientHeight;\n    //     const spans = Math.ceil(height / 10);\n    //     this.setState({ spans })\n    // }\n\n    onClickImage = (id) => {\n        console.log('image', id);\n\n    }\n\n    render() {\n        const {description, urls} = this.props.image;\n        return (\n            <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n                <ImageGroup>\n                    <Image src={urls.regular}\n                           alt={description}\n                           // ref={this.imageRef}\n                           // onClick={(id) => this.onClickImage(id)}\n                   />\n                </ImageGroup>\n\n            </div>\n        )\n    }\n}\n\nexport default ImageCard;","import React from \"react\";\nimport classes from './artistAvatar.module.css';\n\nconst artistAvatar = (props) => (\n    <a href={props.link} target=\"_blank\" className={classes.profileFooter}>\n        <img src={props.avatar} alt=\"\"/>\n        <span>{props.name}</span>\n    </a>\n)\n\nexport default artistAvatar;","import React from \"react\";\nimport classes from './imageList.module.css';\nimport ImageCard from \"../imageCard/imageCard\";\nimport ArtistAvatar from \"../artistAvatar/artistAvatar\";\n\nconst imageList = (props) => {\n     const images = props.images.map((image) => {\n         console.log(image);\n         return (\n             <div>\n                 <ImageCard\n                     style={{\n                         position: 'absolute',\n                         top: 0,\n                         left: 0,\n                         right: 0,\n                         bottom: 0,\n                         height: '100%',\n                         width: '100%',\n                         objectFit: 'cover',\n                         boxShadow: '0px 10px 10px #000'\n                     }}\n                     image={image}\n                     key={image.id} />\n                    <ArtistAvatar avatar={image.user.profile_image.large}\n                    name={image.user.name}\n                    link={image.user.portfolio_url}\n                    />\n\n             </div>\n\n         )\n     })\n\n    return (\n        <div className={classes.imgList}>{images}</div>\n    )\n}\n\nexport default imageList;","import React, {Component} from \"react\";\nimport Aux from \"../../hoc/Aux\";\nimport unsplash from \"../../api/unsplash\";\nimport ImageList from \"../imageList/imageList\";\n\nclass PopularItems extends Component {\n    state = {\n        popularImages: [],\n    }\n\n    componentDidMount() {\n        unsplash\n            .get('/photos', {\n                params: {\n                    order_by: 'popular',\n                    per_page: 8\n                }\n            })\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    popularImages: response.data\n                })\n            })\n    }\n\n    render() {\n        return (\n            <Aux>\n                <h1 style={{textAlign: 'center'}}>Popular images</h1>\n                <ImageList images={this.state.popularImages}/>\n            </Aux>\n        )\n    }\n}\n\nexport default PopularItems;","import React, { Component } from \"react\";\nimport classes from './searchBar.module.css';\n\n\nconst style = {\n    maxWidth: '700px',\n    margin: '0 auto'\n}\n\nclass SearchBar extends Component {\n    state = {\n        term: '',\n        toggleClearBtn: false\n    }\n\n    onFormSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmitForm(this.state.term);\n    }\n\n    render() {\n        return (\n            <div className=\"ui segment\" style={style}>\n                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\n                    <label style={{marginBottom: '5px', display: 'block'}}>Image Search: </label>\n                    <input\n                        value={this.state.term}\n                        onChange={(e) => this.setState({ term: e.target.value}) }\n                        type=\"text\"\n                        placeholder='search...'\n                        required\n                    />\n                </form>\n                <button\n                    className={this.state.term.length > 0 ? classes.show : classes.hide}\n                    onClick={this.props.clearSearch}\n                ><i className='close icon'></i></button>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from \"react\";\nimport classes from './spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.loader}>Loading...</div>\n)\n\nexport default  spinner;","import React from \"react\";\n\nconst messageBlock = (props) => (\n    <div>\n        {props.children}\n    </div>\n)\n\nexport default messageBlock;","import React from \"react\";\nimport hero from '../../assets/hero.jpg';\n\nconst style = {\n    padding: '100px',\n    backgroundImage: \"url(\" + hero + \")\",\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    marginBottom: '50px',\n}\n\nconst heroBox = (props) => (\n    <div style={style}>\n        {props.children}\n    </div>\n);\n\nexport default heroBox;","import React from \"react\";\n\nimport unsplash from \"./api/unsplash\";\nimport './index.css';\n\nimport PopularItems from \"./components/popularItems/popularItems\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport ImageList from \"./components/imageList/imageList\";\nimport Spinner from \"./components/Spinner/spinner\";\nimport MessageBlock from \"./components/MessageBlock/MessageBlock\";\n// import Pagination from \"./components/Pagination/Pagination\";\nimport HeroBox from \"./components/heroBox/heroBox\";\nimport Aux from \"./hoc/Aux\";\n\nclass App extends React.Component {\n    state = {\n        images: [],\n        loading: false,\n        noImg: false,\n        totalPhotos: 0,\n        currentPage: 1,\n        perPage: 20,\n        popularImages: true,\n        authAvatar: '',\n        authName: ''\n    }\n\n    onSearchSubmit = (term) => {\n        unsplash.get(`/search/photos`, {\n                params: {\n                    query: term,\n                    per_page: this.state.perPage,\n                    page: term,\n                },\n            },\n            this.setState({\n                loading: true\n            })\n        )\n            .then((response) => {\n                this.setState({\n                    images: response.data.results,\n                    loading: false,\n                    noImg: false,\n                    totalPhotos: parseInt(response.headers['x-total']),\n                    currentPage: term,\n                    popularImages: false,\n                    authAvatar: response.data.user,\n                    authName: '',\n                });\n\n                if (response.data.total === 0) {\n                    this.setState({\n                        noImg: true,\n                    })\n                }\n            })\n    }\n\n    onClearSearch = () => {\n        this.setState({\n            images: [],\n            loading: false,\n            noImg: false,\n            totalPhotos: 0,\n            currentPage: 1,\n            perPage: 20,\n            popularImages: true\n        })\n    }\n\n    // React says we have to define render!!\n    render() {\n        let imageList = null;\n        let popularImages = <PopularItems />\n        imageList = <ImageList images={this.state.images} />;\n\n        if (this.state.loading) {\n            imageList = <Spinner />\n        }\n\n        if (this.state.noImg) {\n            imageList =  <MessageBlock>No images found</MessageBlock>\n        }\n\n        return (\n            <Aux>\n                <HeroBox>\n                    <SearchBar onSubmitForm={this.onSearchSubmit} clearSearch={this.onClearSearch}/>\n                </HeroBox>\n                <div className='ui container'>\n                    {this.state.popularImages ? <PopularItems /> : ''}\n                    {imageList}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"show\":\"searchBar_show__10T3h\",\"hide\":\"searchBar_hide__37it3\"};"],"sourceRoot":""}